import style from './AboutProject.module.scss'
import { useRef } from 'react'

export const AboutProject = () => {

    const targetRef = useRef<HTMLDivElement | null>(null)
    
    const handleScroll = () => {
        if (targetRef.current) {
            targetRef.current.scrollIntoView()
        }
    }

    return (
        <>
            <section>
                <h2>Зміст</h2>
                <ul>
                    <li onClick={handleScroll}>Інформація про сервіс</li>
                    <li onClick={handleScroll}>Авторизація за допомогою Active Directory</li>
                </ul>
            </section>
            <div className={style.aboutProject} ref={targetRef}>
                <h2>Інформація про сервіс</h2>
                <p>Сайт Service-desk створений на базі  <b>фреймворку React</b> із використанням <b>JavaScript</b>, <b>TypeScript</b>, <b>HTML</b>, <b>CSS</b> та <b>сервісу MockAPI</b> для базового імітування роботи з базою даних. </p>
                <p>Основною перевагою цього проєкту є застосування <b>технології SPA (Single Page Application)</b>, завдяки якій сторінка <b>не перезавантажується</b> при переході між розділами сайту. Замість цього відбувається динамічне оновлення контенту, що значно підвищує швидкість роботи сервісу та покращує користувацький досвід. Завдяки <b>SPA</b> сайт завантажується набагато швидше: на даний момент сторінки завантажуються <b>за 300 мс</b>, що є доволі гарним результатом для веб-додатків цього типу. (рис. 1)</p>
                <p>Ще однією важливою перевагою є <b>компонентна архітектура React</b>, яка дозволяє легко додавати, видаляти або змінювати окремі елементи інтерфейсу без значного впливу на загальну структуру сайту. Це забезпечує гнучкість і зручність у подальшій розробці та підтримці проєкту. (рис. 2)</p>
                <aside className="flex">
                    <div>
                        <img src="./siteLoad.png" alt="" />
                        <p><b>Рис 1</b></p>
                    </div>
                    <div>
                        <img src="./siteStructura.png" alt="" />
                        <p><b>Рис 2</b></p>
                    </div>
                </aside>
                <p>На даний момент сайт не є повністю адаптивним, однак він повністю виконує свій функціонал зі створення, погодження та виконання заявок користувачів. <b>Особливістю</b> оновленої версії є сортування заявок: ті, що мають таймер або статус Expired, автоматично розташовуються на початку списку, що дозволяє зручніше контролювати їх виконання.</p>
                <p>У зв'язку з відсутністю доступу до певних даних, користувачів необхідно вказувати вручну при створенні заявки. Також у секції "Мої заявки" відображаються всі заявки, незалежно від того, хто їх створив. Завдяки використанню MockAPI, сайт має інтернет-базу даних, що дозволяє будь-якому користувачу переглядати всі створені заявки. Це рішення було реалізоване для демонстрації, як працюватиме сервіс у реальному середовищі.</p>
            </div>
            <div ref={targetRef}>
                <h2>Авторизація за допомогою Active Directory</h2>
                <p>
                    Для реалізації авторизації на сайті з використанням <b>Active Directory</b> я розробив <b>серверну частину на Node.js з використанням фреймворку Express.js</b> . Для автентифікації користувачів я <b>застосував бібліотеки NTLM та activedirectory2</b>.  
                </p>
                <p>NTLM використовується для реалізації аутентифікації за протоколом NTLM (NT LAN Manager). Завдяки цій бібліотеці користувачі, які вже <b>увійшли в систему Windows або перебувають у корпоративному домені, можуть автоматично авторизуватися на сайті без необхідності повторного введення облікових даних</b>. Крім того, NTLM забезпечує безпечний обмін автентифікаційною інформацією між клієнтом і сервером, що є особливо важливим у корпоративних середовищах.</p>
                <p>
                     На клієнтській частині веб-застосунку відбувається наступний процес:

                    <ul>
                        <li>- Відправляється запит до сервера за заданою URL-адресою, в якому міститься ім’я користувача.</li>
                        <li>- Сервер отримує це ім’я, ініціює NTLM-аутентифікацію, а також встановлює з’єднання з Active Directory за допомогою бібліотеки activedirectory2 для пошуку інформації про користувача.</li>
                        <li>- Після успішного пошуку дані про знайденого користувача повертаються на клієнт для подальшої обробки.</li>
                    </ul>
                </p>
                <p> <b>Важливо</b>, щоб користувач, який заходить на сайт,<b> перебував у нашій внутрішній мережі</b>. Це забезпечує додатковий рівень безпеки та гарантує, що доступ мають лише авторизовані користувачі.</p>


            </div>
        </>
    )
}